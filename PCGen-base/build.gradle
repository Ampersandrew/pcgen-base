/*
 * PCGen base build using the Gradle tool. This file specifies the core build tasks
 * and refers to other files in the code/gradle directory for additional tasks
 * for specific output.
 *
 * Developer build: gradle
 * Incremental dev build: gradle build 
 * Full build: gradle all 
 */

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "jacoco"

group = 'net.sourceforge.pcgen'
description = """PCGen base library"""

defaultTasks 'clean', 'build'

sourceCompatibility = 1.7

ext {
    majorVersion = 1
    minorVersion = 0
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

sourceSets {
    main {
        java {
            srcDirs 'code/src/java'
        }
    }
    test {
        java {
            srcDirs 'code/src/test'
        }
    }
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

// Calculate the version number - runs in the parse phase
allprojects {
    ext.buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss Z')
    if (System.env.BUILD_NUMBER) {
        project.version = "$majorVersion.$minorVersion.$System.env.BUILD_NUMBER"
    }
    else {
        project.version = "$majorVersion.$minorVersion"
    }
}

task echoVer() << {
    println "${project.name} Version: ${project.version} (${buildTimestamp})"
}

jar {
    manifest {
        attributes 'Implementation-Title': 'PCGenBaseLibrary', 'Implementation-Version': project.version, 
        	'Built-On': buildTimestamp 
    }
}

apply from: 'gradle/reporting.gradle'
